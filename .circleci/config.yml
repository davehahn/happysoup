# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
  # Use a package of configuration called an orb.
  #orbs:
  # Declare a dependency on the welcome-orb
  #  welcome: circleci/welcome-orb@0.4.1
  # Orchestrate or schedule a set of jobs
  #workflows:
  # Name the workflow "welcome"
  #  welcome:
# Run the welcome/run job in its own container
#    jobs:
#      - welcome/run
jobs:
  build-validation-env:
    docker:
      - image: legendarydevs/sfdx_deploy
    steps:
      - run:
          name: Build Validation Environment
          command: . build/circleci/create_sandbox.sh
      - store_artifacts:
          path: /tmp/org_info.json

  stage:
    docker:
      - image: legendarydevs/sfdx_deploy
    steps:
      - checkout
      - run:
          name: Authenticate Staging
          command: . build/circleci/authenticate.sh $STAGING_USER $STAGING_CONSUMER_KEY https://test.salesforce.com
      - run:
          name: Clean
          command: . build/circleci/cleancode.sh
      - run:
          name: Deploy to Staging
          command: . build/circleci/deploy.sh
      # - run:
      #     name: Deploy Experience Bundles to Staging
      #     command: . build/circleci/deploy_experience_bundles.sh

  deploy:
    docker:
      - image: legendarydevs/sfdx_deploy
    steps:
      - checkout
      - run:
          name: Authenticate Production
          command: . build/circleci/authenticate.sh $PRODUCTION_USER $PRODUCTION_CONSUMER_KEY https://login.salesforce.com
      - run:
          name: Clean
          command: . build/circleci/cleancode.sh
      - run:
          name: Deploy to Production
          command: . build/circleci/deploy.sh
      # - run:
      #     name: Deploy Experience Bundles to Staging
      #     command: . build/circleci/deploy_experience_bundles.sh
workflows:
  version: 2.1
  deploy_to_staging:
    jobs:
      - stage:
          filters:
            branches:
              only:
                - staging
  deploy_to_production:
    jobs:
      - deploy:
          filters:
            branches:
              only:
                - master
  validate:
    jobs:
      - build-validation-env:
          filters:
            branches:
              only:
                - feature/*
                - bugfix/*
                - declarative/*
