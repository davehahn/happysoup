<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Chatter_Dealer_Order_Pending_Review</name>
        <label>Chatter Dealer Order Pending Review</label>
        <locationX>176</locationX>
        <locationY>791</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>DealerOrderPendingReviewChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <assignments>
        <name>User_Assignment</name>
        <label>User Assignment</label>
        <locationX>264</locationX>
        <locationY>575</locationY>
        <assignmentItems>
            <assignToReference>Users</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>@[{!User_For_Chatter_Post.Id}]</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>User_For_Chatter_Post</targetReference>
        </connector>
    </assignments>
    <description>Send notification ( chatter ) when an Order is submitted</description>
    <interviewLabel>DealerOrder - SubmittedNotification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>DealerOrder - SubmittedNotification</label>
    <loops>
        <name>User_For_Chatter_Post</name>
        <label>User For Chatter Post</label>
        <locationX>176</locationX>
        <locationY>455</locationY>
        <collectionReference>Get_UserIds_For_chatter_Post</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>User_Assignment</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Chatter_Dealer_Order_Pending_Review</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_UserIds_For_chatter_Post</name>
        <label>Get UserIds For chatter Post</label>
        <locationX>176</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>User_For_Chatter_Post</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Username</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>jdavis@legendboats.com</stringValue>
            </value>
        </filters>
        <filters>
            <field>Username</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>mduhamel@legendboats.com</stringValue>
            </value>
        </filters>
        <filters>
            <field>Username</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>jdewar@legendboats.com</stringValue>
            </value>
        </filters>
        <filters>
            <field>Username</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>sboothe@legendboats.com</stringValue>
            </value>
        </filters>
        <filters>
            <field>Username</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>rfraser@legendboats.com</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_UserIds_For_chatter_Post</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Stage__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pending Review</stringValue>
            </value>
        </filters>
        <filters>
            <field>Order_Total__c</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <object>Dealer_Order__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>DealerOrderPendingReviewChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!Users}
{!$Record.Account__r.Name} has placed an order. 
{!$Record.Name}
Order Total:  {!$Record.Order_Total__c} 
Number of units:   {!$Record.LineItemCount__c} 
Booking Order:  {!$Record.Is_Booking_Order__c}</text>
    </textTemplates>
    <variables>
        <name>Users</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
