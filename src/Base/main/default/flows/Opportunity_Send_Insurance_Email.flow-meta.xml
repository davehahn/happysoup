<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Insurance_Email_Template</name>
        <label>Insurance Email Template</label>
        <locationX>242</locationX>
        <locationY>864</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>InsuranceEmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Fetch_Recipient_email_Quebec.email__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>sender</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>A New Member of the Legend Family!</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>State_is_not_Quebec</name>
        <label>State is not Quebec</label>
        <locationX>506</locationX>
        <locationY>408</locationY>
        <assignmentItems>
            <assignToReference>IsStateQuebec</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Fetch_Recipient_email_Quebec</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>State_is_Quebec</name>
        <label>State is Quebec</label>
        <locationX>242</locationX>
        <locationY>408</locationY>
        <assignmentItems>
            <assignToReference>IsStateQuebec</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Fetch_Recipient_email_Quebec</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Billing_State</name>
        <label>Billing State</label>
        <locationX>374</locationX>
        <locationY>288</locationY>
        <defaultConnector>
            <targetReference>State_is_not_Quebec</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Billing_state_Quebec</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quebec</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>State_is_Quebec</targetReference>
            </connector>
            <label>Billing state Quebec</label>
        </rules>
    </decisions>
    <decisions>
        <name>Recipient_Email_available</name>
        <label>Recipient Email available?</label>
        <locationX>374</locationX>
        <locationY>744</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Recipient_Email_List_Available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Fetch_Recipient_email_Quebec.email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Insurance_Email_Template</targetReference>
            </connector>
            <label>Recipient Email List Available</label>
        </rules>
    </decisions>
    <interviewLabel>Opportunity : Send Insurance Email {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity : Send Insurance Email</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Fetch_Recipient_email_Quebec</name>
        <label>Fetch Recipient Email Quebec</label>
        <locationX>374</locationX>
        <locationY>624</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Recipient_Email_available</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email_to_Quebec_Customer__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IsStateQuebec</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Legend_Insurance_Recipients_Email_List__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Sent to ERP</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>012i0000000rndpAAA</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Insurance_Email</name>
            <connector>
                <targetReference>Billing_State</targetReference>
            </connector>
            <label>Insurance Email</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>InsuranceEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-family: arial;&quot;&gt;Hello,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;We&apos;ve helped another new Legend Family Member out onto the water!&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Customer Info:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;{!$Record.Account.FirstName} {!$Record.Account.LastName}&lt;/p&gt;&lt;p&gt;{!$Record.Account.BillingStreet},&lt;/p&gt;&lt;p&gt;{!$Record.Account.BillingCity},{!$Record.Account.BillingState},&lt;/p&gt;&lt;p&gt;{!$Record.Account.BillingCountry} - {!$Record.Account.BillingPostalCode}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Deal Details:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 12px;&quot;&gt;Boat Model:&lt;/b&gt;&lt;b style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/b&gt;{!$Record.Boat_Model_Year__c} {!$Record.Product_Make__c} {!$Record.&lt;span style=&quot;font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;Boat_Model_Formula__c&lt;/span&gt;}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Boat Class:&lt;/b&gt; {!$Record.BoatId__r.Boat_Insurance_Class__c}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Boat Length (in Feet):&lt;/b&gt; {!$Record.BoatId__r.Boat_Length_in_Feet__c}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Total Amount:&amp;nbsp;&lt;/b&gt;{!$Record.Boat_Insurance_Total__c}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Delivery Date: &lt;/b&gt;{!$Record.Delivery_Date__c}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Financing Institution:&lt;/b&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: arial;&quot;&gt;You can contact&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;{!$Record.Account.FirstName}&lt;/b&gt;&lt;span style=&quot;font-family: arial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!$Record.Account.LastName}&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family: arial;&quot;&gt;with a quote at:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Email:&lt;/b&gt;&amp;nbsp;{!$Record.Account.PersonEmail}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Phone:&lt;/b&gt;&amp;nbsp;{!$Record.Account.Phone}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Mobile:&lt;/b&gt;&amp;nbsp;{!$Record.Account.PersonMobilePhone}&lt;/p&gt;&lt;p&gt;&lt;b&gt;Other:&lt;/b&gt;&amp;nbsp;{!$Record.Account.PersonOtherPhone}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If you have any questions about this deal, please do not hesitate to contact&amp;nbsp;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt; {!$Record.Business_Manager__r.FirstName} {!$Record.Business_Manager__r.LastName}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: arial;&quot;&gt;Thanks so much and best of luck helping this customer stay safe on the water!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: arial;&quot;&gt;﻿&lt;/span&gt;&lt;span style=&quot;color: rgb(62, 62, 60); font-family: &amp;quot;Times New Roman&amp;quot;; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;https://legendboats.my.salesforce.com/servlet/servlet.ImageServer?id=015i0000006pR7C&amp;amp;oid=00Di0000000aRhm&quot;&gt;&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>IsStateQuebec</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>sender</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.Owner.Email</elementReference>
        </value>
    </variables>
</Flow>
